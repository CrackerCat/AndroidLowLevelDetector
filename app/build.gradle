apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

def currentGitBranchName = getCurrentGitBranchName()

android {
    compileSdkVersion androidBuild.compileSdkVersion
    buildToolsVersion androidBuild.buildToolsVersion

    defaultConfig {
        applicationId 'net.imknown.android.forefrontinfo'

        // setProperty('archivesBaseName', 'lld')
        archivesBaseName = 'lld'

        versionCode androidBuild.versionCode
        versionName androidBuild.versionName

        minSdkVersion androidBuild.minSdkVersion
        targetSdkVersion androidBuild.targetSdkVersion

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        resConfigs 'zh-rCN', 'fr-rFR'

        buildConfigField 'String', 'GIT_BRANCH', "\"$currentGitBranchName\""

        externalNativeBuild {
            cmake {
                arguments '-DANDROID_ARM_NEON=TRUE', '-DANDROID_TOOLCHAIN=clang'

                cFlags '-D__STDC_FORMAT_MACROS'

                cppFlags '-fexceptions', '-frtti'
            }
        }
    }

    signingConfigs {
        release {
            storeFile file(keysConfig.release.storeFile)
            storePassword keysConfig.release.storePassword
            keyAlias keysConfig.release.keyAlias
            keyPassword keysConfig.release.keyPassword
        }

        debug {
            storeFile file(keysConfig.debug.storeFile)
            storePassword keysConfig.debug.storePassword
            keyAlias keysConfig.debug.keyAlias
            keyPassword keysConfig.debug.keyPassword
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true

            signingConfig signingConfigs.release

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro', 'proguard-gson-rules.pro'
        }

        debug {
            debuggable true
            jniDebuggable true

            signingConfig signingConfigs.debug

            applicationIdSuffix '.debug'
        }
    }

    applicationVariants.all { variant ->
        renameApk(variant)
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    // https://kotlinlang.org/docs/tutorials/android-plugin.html
    // androidExtensions {
    //     experimental = true
    // }

    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }
}

// region [Rename APK]
private renameApk(variant) {
    def buildTypeName = variant.buildType.name
    if (buildTypeName == 'debug') {
        return
    }

    def currentTaskNames = gradle.startParameter.taskNames
    if (currentTaskNames.size != 1) {
        // Maybe clicking the "Sync Now"?
        return
    }

    def currentTaskName = currentTaskNames[0]
    def isDifferentBuildType = !currentTaskName.toLowerCase(Locale.US).contains(buildTypeName)
    if (isDifferentBuildType) {
        println("No need to rename the output of task '$currentTaskName'.")
        return
    }

    variant.outputs.all { output ->
        // TODO: Rename Aab
        outputFileName = getRenamedApkName(variant)
        println "OutputFileName: $outputFileName"
    }
}

private getRenamedApkName(variant) {
    def versionCode = variant.versionCode
    def versionName = variant.versionName
    def currentDate = getCurrentDate()
    def buildTypeName = variant.buildType.name

    "${archivesBaseName}_${versionName}_${versionCode}_$currentDate" +
            "_${currentGitBranchName}_$buildTypeName" +
            ".apk"
}

import java.text.SimpleDateFormat

private static getCurrentDate() {
    new SimpleDateFormat("yyyy-MM-dd-HH-mm", Locale.US).format(new Date())
}

private static getCurrentGitBranchName() {
    def branch = ""
    def process = "git rev-parse --abbrev-ref HEAD".execute()
    process.in.eachLine { line -> branch = line }
    process.err.eachLine { line -> println line }
    process.waitFor()

    branch
}
// endregion [Rename APK]

apply from: "$rootDir/gradle/dependencies.gradle"
