apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion androidBuild.compileSdkVersion
    buildToolsVersion androidBuild.buildToolsVersion

    defaultConfig {
        applicationId 'net.imknown.android.forefrontinfo'

        manifestPlaceholders = [appName: '@string/app_name']

        // setProperty('archivesBaseName', 'lld-$versionName')
        archivesBaseName = 'lld'

        versionCode androidBuild.versionCode
        versionName androidBuild.versionName

        minSdkVersion androidBuild.minSdkVersion
        targetSdkVersion androidBuild.targetSdkVersion

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        resConfigs 'zh-rCN', 'fr-rFR'
    }

    signingConfigs {
        release {
            storeFile file(keysConfig.release.storeFile)
            storePassword keysConfig.release.storePassword
            keyAlias keysConfig.release.keyAlias
            keyPassword keysConfig.release.keyPassword
        }

        debug {
            storeFile file(keysConfig.debug.storeFile)
            storePassword keysConfig.debug.storePassword
            keyAlias keysConfig.debug.keyAlias
            keyPassword keysConfig.debug.keyPassword
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true

            signingConfig signingConfigs.release

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro', 'proguard-gson-rules.pro'
        }

        debug {
            debuggable true
            jniDebuggable true

            signingConfig signingConfigs.debug

            applicationIdSuffix '.debug'
        }
    }

    def version = 'version'
    flavorDimensions version

    productFlavors {
        // stable
        master {
            dimension version
        }

        // beta
        develop {
            dimension version

            manifestPlaceholders = [appName: '@string/app_beta_name']

            versionCode androidBuild.versionBetaCode
            versionName androidBuild.versionBetaName
            versionNameSuffix "-beta$androidBuild.versionBetaIteration"
        }
    }

    applicationVariants.all { variant ->
        if (variant.buildType.name != 'debug') {
            return
        }

        setAppName(variant)
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // https://kotlinlang.org/docs/tutorials/android-plugin.html
    // androidExtensions {
    //     experimental = true
    // }
}

private static void setAppName(variant) {
    def appName
    def flavorInfix
    def flavorName = variant.getFlavorName()
    if (flavorName == 'master') {
        appName = '@string/app_debug_name'
        flavorInfix = ''
    } else if (flavorName == 'develop') {
        appName = '@string/app_beta_debug_name'
        flavorInfix = " ${capFirstLetter('beta')}"
    } else {
        appName = ''
        flavorInfix = ''
    }

    variant.getMergedFlavor().manifestPlaceholders = [appName: appName]
    variant.resValue 'string', 'leak_canary_display_activity_label', "LLD${flavorInfix} Leaks"
}

private static def capFirstLetter(String flavor) {
    flavor.substring(0, 1).toUpperCase(Locale.US) + flavor.substring(1)
}

apply from: "$rootDir/gradle/dependencies.gradle"
